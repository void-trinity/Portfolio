{"version":3,"sources":["components/header/styles.js","constants/intro.js","components/header/index.js","components/content/about/styles.js","components/content/about/index.js","constants/aboutMe.js","constants/workExp.js","components/content/workexp/styles.js","components/content/workexp/workExCard.js","components/content/workexp/index.js","components/content/styles.js","components/content/projects/styles.js","constants/projects.js","components/content/projects/projectCard.js","components/content/projects/index.js","components/content/skills/styles.js","constants/skills.js","components/content/skills/index.js","components/content/contact/styles.js","constants/contact.js","components/content/contact/index.js","components/content/education/styles.js","components/content/education/educationCard.js","constants/education.js","components/content/education/index.js","components/content/achievements/styles.js","components/content/achievements/achievementCard.js","constants/achievements.js","components/content/achievements/index.js","components/content/index.js","components/index.js","App.js","serviceWorker.js","index.js"],"names":["styles","makeStyles","theme","paper","padding","spacing","color","backgroundColor","icon","cursor","a","intro","name","profile","links","link","Header","classes","Grid","container","item","xs","Paper","elevation","className","Typography","variant","style","fontWeight","marginTop","sm","justify","direction","map","index","data","href","target","rel","GitHub","fontSize","LinkedIn","Facebook","Twitter","YouTube","getSocialButtons","grid","textAlign","textJustify","About","workExp","title","company","date","description","jd","companyDate","desc","WorkExCard","props","key","WorkExperience","div","flexGrow","paddingLeft","paddingRight","paddingBottom","projects","ProjectCard","Projects","skills","Skills","contact","mobile","email","Contact","alignItems","marginRight","degree","school","marks","EducationCard","score","time","education","Education","award","AchievementCard","achievements","Achievements","Content","md","Container","App","alignContent","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.d9ed94cd.chunk.js","sourcesContent":["import { makeStyles } from '@material-ui/core/styles';\n\nconst styles = makeStyles((theme) => ({\n    paper: {\n        padding: theme.spacing(10),\n        color: 'white',\n        backgroundColor: '#dedede'\n    },\n\n    icon: {\n        color: '#7d7d7d',\n        '&:hover': {\n            cursor: 'pointer',\n            color: '#272A34'\n        }\n    },\n\n    a: {\n        color: 'inherit'\n    }\n      \n}));\n\nexport default styles;","const intro = {\r\n    name: 'Siddharth Chandra',\r\n    profile: 'Full Stack Developer',\r\n    links: [\r\n        {\r\n            name: 'github',\r\n            link: 'https://github.com/void-trinity/'\r\n        },\r\n        {\r\n            name: 'linkedin',\r\n            link: 'https://www.linkedin.com/in/siddharth-chandra/'\r\n        },\r\n        {\r\n            name: 'facebook',\r\n            link: 'https://www.facebook.com/iamsiddharthchandra/'\r\n        },\r\n        {\r\n            name: 'twitter',\r\n            link: 'https://twitter.com/tonne_machine/'\r\n        },\r\n        {\r\n            name: 'youtube',\r\n            link: 'https://www.youtube.com/channel/UCng2Y_G4cznPQTFgITQiHZg/'\r\n        },\r\n    ]\r\n}\r\n\r\nexport default intro;","import React from 'react';\nimport { Grid, Paper, Typography } from '@material-ui/core';\nimport { GitHub, LinkedIn, Facebook, Twitter, YouTube } from '@material-ui/icons';\n\nimport styles from './styles';\nimport intro from '../../constants/intro';\n\nconst getSocialButtons = (data) => {\n    const classes = styles();\n    const { name, link } = data;\n    switch(name) {\n        case 'github':\n            return (\n                <Grid item className={classes.icon}>\n                    <a href={link} target=\"_blank\" rel=\"noopener noreferrer\" className={classes.a}>\n                        <GitHub fontSize='large' />\n                    </a>\n                </Grid>\n            );\n        case 'linkedin':\n            return (\n                <Grid item className={classes.icon}>\n                    <a href={link} target=\"_blank\" rel=\"noopener noreferrer\" className={classes.a}>\n                        <LinkedIn fontSize='large' />\n                    </a>\n                </Grid>\n            );\n        case 'facebook':\n            return (\n                <Grid item className={classes.icon}>\n                    <a href={link} target=\"_blank\" rel=\"noopener noreferrer\" className={classes.a}>\n                        <Facebook fontSize='large' />\n                    </a>\n                </Grid>\n            );\n        case 'twitter':\n            return (\n                <Grid item className={classes.icon}>\n                    <a href={link} target=\"_blank\" rel=\"noopener noreferrer\" className={classes.a}>\n                        <Twitter fontSize='large' />\n                    </a>\n                </Grid>\n            );\n        case 'youtube':\n            return (\n                <Grid item className={classes.icon}>\n                    <a href={link} target=\"_blank\" rel=\"noopener noreferrer\" className={classes.a}>\n                        <YouTube fontSize='large' />\n                    </a>\n                </Grid>\n            );\n        default:\n            return <></>;\n    }\n}\n\nconst Header = () => {\n    const classes = styles();\n    const { name, profile, links } = intro;\n    return (\n        <Grid container>\n            <Grid item xs={12} >\n                <Paper elevation={0} className={classes.paper}>\n                    <Typography variant='h3' style={{ color: '#272A34', fontWeight: 'bold' }}>\n                        {name}\n                    </Typography>\n                    <Typography variant='h5' style={{ color: '#7d7d7d' }}>\n                        {profile}\n                    </Typography>\n                    <Grid style={{ marginTop: '20px' }} xs={12} sm={4} container justify='space-between' direction='row'>\n                        \n                        {links.map((item, index) => {\n                            return getSocialButtons(item);\n                        })}\n                    </Grid>\n                </Paper>\n            </Grid>\n        </Grid>\n    )\n}\n\nexport default Header;","import { makeStyles } from '@material-ui/core/styles';\n\nconst styles = makeStyles((theme) => ({\n    paper: {\n        padding: theme.spacing(5),\n        marginTop: theme.spacing(5)\n    },\n    grid: {\n        marginTop: theme.spacing(3),\n        color: '#434343',\n        textAlign: 'justify',\n        textJustify: 'inter-word'\n    }\n}));\n\nexport default styles;","import React from 'react';\nimport { Paper, Typography, Grid } from '@material-ui/core';\n\nimport styles from './styles';\nimport aboutMe from '../../../constants/aboutMe';\n\nconst About = () => {\n    const classes = styles();\n    return (\n        <Paper elevation={0} className={classes.paper}>\n            <Grid container direction='column'>\n                <Grid item>\n                    <Typography variant='h4'>\n                        About Me\n                    </Typography>\n                </Grid>\n                <Grid item className={classes.grid}>\n                    <Typography variant='p'>\n                        {aboutMe}\n                    </Typography>\n                </Grid>\n            </Grid>\n        </Paper>\n    )\n}\n\nexport default About;","const aboutMe = 'A Computer Science Undergraduate. Exploring the binary world and ever ready to seek new knowledge. Apart from technical stuff, I like to create digital art whenver I get time. Also, I love to play video games and stream them too. My other hobbies include playing football and cricket.'\n\nexport default aboutMe;","const workExp = [\n    {\n        title: 'Software Development Engineer',\n        company: 'Soroco India Private Limited',\n        date: 'Sept 2019 - Present',\n        description: [\n            'Working as a SDE with the Algorithms (Jerry) team for the Scout Core Product.'\n        ]\n    },\n    {\n        title: 'Intern',\n        company: 'Reliance Industries Limited',\n        date: 'May 2019 - July 2019',\n        description: [\n            'Implemented CI/CD pipeline for automated testing and deployment on Azure.',\n            'Worked on shifting the pipeline from Azure to GitLab (with Jenkins integration).',\n            'Build test scripts for SonarQube testing.'\n        ]\n    },\n    {\n        title: 'Intern',\n        company: 'Terribly Tiny Tales',\n        date: 'May 2018 - July 2018',\n        description: [\n            'Designed the version 2 of their TTT-Tribe app from scratch in React Native and also helped in updating their Main TTT Social App in Ionic.',\n            'Helped in creating the TTT Video Maker that generates chat stories in video format from text input.'\n        ]\n    }\n];\n\nexport default workExp;","import { makeStyles } from '@material-ui/core/styles';\n\nconst styles = makeStyles((theme) => ({\n    paper: {\n        padding: theme.spacing(5),\n        marginTop: theme.spacing(5)\n    },\n    grid: {\n        marginTop: theme.spacing(5),\n        textAlign: 'justify',\n        textJustify: 'inter-word'\n    },\n    jd: {\n        fontWeight: 'bold',\n        color: '#7d7d7d',\n        fontSize: 16\n    },\n    companyDate: {\n        color: '#7d7d7d',\n        fontSize: 16\n    },\n    desc: {\n        color: '#434343',\n        marginTop: theme.spacing(1)\n    }\n}));\n\nexport default styles;","import React from 'react';\nimport { Grid, Typography } from '@material-ui/core';\n\nimport styles from './styles';\n\nconst WorkExCard = (props) => {\n    const classes = styles();\n    return (\n        <Grid item className={classes.grid}>\n            <Typography variant='p' className={classes.jd}>\n                {props.data.title}\n            </Typography>\n            <Typography variant='p' className={classes.companyDate}>\n                {` - ${props.data.company}`}\n            </Typography>\n            <Typography variant='p' className={classes.companyDate}>\n                {` (${props.data.date})`}\n            </Typography>\n            <Grid direction='column'>\n                {props.data.description.map((item, index) => {\n                    return (\n                        <Grid key={index} item className={classes.desc}>\n                            <Typography variant='p'>\n                                {item}\n                            </Typography>\n                        </Grid>\n                    )\n                })}\n            </Grid>\n        </Grid>\n    );\n}\n\nexport default WorkExCard;","import React from 'react';\nimport { Paper, Grid, Typography } from '@material-ui/core';\n\nimport workExp from '../../../constants/workExp';\nimport styles from './styles';\nimport WorkExCard from './workExCard';\n\nconst WorkExperience = () => {\n    const classes = styles();\n    return (\n        <Paper elevation={0} className={classes.paper}>\n            <Grid container direction='column'>\n                <Grid item>\n                    <Typography variant='h4'>\n                        Work Experience\n                    </Typography>\n                </Grid>\n                <Grid item>\n                    {workExp.map((item, index) => {\n                        return <WorkExCard data={item} key={index} />;\n                    })}\n                </Grid>\n            </Grid>\n        </Paper>\n    );\n}\n\nexport default WorkExperience;","import { makeStyles } from '@material-ui/core/styles';\n\nconst styles = makeStyles((theme) => ({\n    div: { \n        flexGrow: 1,\n        backgroundColor: '#d1d1d1',\n        paddingLeft: theme.spacing(5),\n        paddingRight: theme.spacing(5),\n        paddingBottom: theme.spacing(5)\n    }\n}));\n\nexport default styles;","import { makeStyles } from '@material-ui/core/styles';\n\nconst styles = makeStyles((theme) => ({\n    paper: {\n        padding: theme.spacing(5),\n        marginTop: theme.spacing(5)\n    },\n    desc: {\n        color: '#434343',\n        marginTop: theme.spacing(1)\n    },\n    jd: {\n        fontWeight: 'bold',\n        color: '#7d7d7d',\n        fontSize: 16\n    },\n    grid: {\n        marginTop: theme.spacing(5),\n        textAlign: 'justify',\n        textJustify: 'inter-word'\n    },\n}));\n\nexport default styles;","const projects = [\n    {\n        title: 'Pokédex',\n        description: 'A mini-encyclopedia of Pokémon species, types, evolutions, and moves. Made using Node JS, React JS, React Native, Tensorflow-Lite and Mongo-DB. The data was scraped from official pokemon.com website and stored in Mongo-DB database. The application is available as both web app and mobile app. The mobile application also deploys mobilenet ssd model for image classification of generation I pokemon on the device itself, just like the real pokedex featured in pokemon game and tv shows.',\n        link: 'https://gitlab.com/void-trinity/pokedex-backend'\n    },\n    {\n        title: 'E-Health',\n        description: 'Made using Flask, SQL, Tensorflow-Lite, React Native and Yolo, the application is capable of roughly estimating nutrition content in food using object detection and image processing. Flask Backend is used for data transfer and hosting image processing module. React Native app uses trained Yolo model capable of detecting food items in images. Image processing is done using OpenCV.',\n        link: 'https://github.com/void-trinity/Calorie-Counter-Flask'\n    },\n    {\n        title: 'Tweet Streamer',\n        description: 'A simple streaming API that uses twitter stream to get latest feeds from search keywords and store them in mongodb database and uses NodeJS as backend server for the APIs. The API also has feature to get the results in sorted and filtered (search, sort by time, etc) and results can be exported as CSV.',\n        link: 'https://github.com/void-trinity/Streamer-API'\n    },\n    {\n        title: 'Byara Premier League',\n        description: 'A react native application that uses mongodb database and node backend. During the COVID pandemic, one of the major sources of entertainment is online board games. This app serves as a leaderboard cum points tracker to make the events more competitive between friends and family. Keeps track of all the games played along with participants and their standings. Also has a global leaderboard showing the current rank of the players. Uses social login for authentication and JWT access token.',\n        link: 'https://github.com/void-trinity/BPL-Backend'\n    },\n    {\n        title: 'Chhattisgarh Tourism App',\n        description: 'A cross platform app for getting information about tourist places in Chhattisgarh state. Has interactive features like review, comment, etc. Django is used for the backend while the application is developed in React Native. This application won the first prize in Appiness contest organized by IIIT Naya Raipur and is currently being reviewed by CG Government to replace it as the official tourism app of the state.',\n        link: 'https://github.com/mohithk100/cgTourismApp'\n    }\n];\n\nexport default projects;","import React from 'react';\nimport { Grid, Typography } from '@material-ui/core';\n\nimport styles from './styles';\n\nconst ProjectCard = (props) => {\n    const classes = styles();\n    return (\n        <Grid item className={classes.grid}>\n            <a href={props.data.link}>\n                <Typography variant='p' className={classes.jd}>\n                    {props.data.title}\n                </Typography>\n            </a>\n            <Grid direction='column'>\n                <Grid item className={classes.desc}>\n                    <Typography variant='p' className={classes.companyDate}>\n                        {`${props.data.description}`}\n                    </Typography>\n                </Grid>\n            </Grid>\n        </Grid>\n    );\n}\n\nexport default ProjectCard;","import React from 'react';\nimport { Paper, Grid, Typography } from '@material-ui/core';\n\nimport styles from './styles';\nimport projects from '../../../constants/projects';\nimport ProjectCard from './projectCard';\n\nconst Projects = () => {\n    const classes = styles();\n    return (\n        <Paper elevation={0} className={classes.paper}>\n            <Grid container direction='column'>\n                <Grid item>\n                    <Typography variant='h4'>\n                        Projects\n                    </Typography>\n                </Grid>\n                <Grid item>\n                    {projects.map((item, index) => {\n                        return <ProjectCard data={item} key={index} />\n                    })}\n                </Grid>\n            </Grid>\n        </Paper>\n    );\n}\n\nexport default Projects;","import { makeStyles } from '@material-ui/core/styles';\n\nconst styles = makeStyles((theme) => ({\n    paper: {\n        padding: theme.spacing(5),\n        marginTop: theme.spacing(5)\n    },\n    grid: {\n        marginTop: theme.spacing(3),\n        textAlign: 'justify',\n        textJustify: 'inter-word',\n        color: '#434343',\n        fontWeight: 'bold'\n    },\n}));\n\nexport default styles;","const skills = [\n    'C/C++',\n    'Python',\n    'HTML & CSS',\n    'Javascript & jQuery',\n    'Flask',\n    'Node JS and Express',\n    'MySQL',\n    'MongoDB',\n    'React JS and React Native',\n    'Android (Kotlin - Beginner)'\n];\n\nexport default skills;","import React from 'react';\nimport { Paper, Grid, Typography } from '@material-ui/core';\n\nimport styles from './styles';\nimport skills from '../../../constants/skills';\n\nconst Skills = () => {\n    const classes = styles();\n    return (\n        <Paper elevation={0} className={classes.paper}>\n            <Grid container direction='column'>\n                <Grid item>\n                    <Typography variant='h4'>\n                        Skills\n                    </Typography>\n                </Grid>\n                <Grid item>\n                    <Grid container direction='column'>\n                        {skills.map((item, index) => {\n                            return (\n                                <Grid item className={classes.grid}>\n                                    <Typography variant='p'>\n                                        {item}\n                                    </Typography>\n                                </Grid>\n                            );\n                        })}\n                    </Grid>\n                </Grid>\n            </Grid>\n        </Paper>\n    );\n}\n\nexport default Skills;","import { makeStyles } from '@material-ui/core/styles';\n\nconst styles = makeStyles((theme) => ({\n    paper: {\n        padding: theme.spacing(5),\n        marginTop: theme.spacing(5)\n    },\n    grid: {\n        marginTop: theme.spacing(3),\n        textAlign: 'justify',\n        textJustify: 'inter-word',\n        color: '#434343',\n    },\n    a: {\n        color: 'inherit'\n    }\n}));\n\nexport default styles;","const contact = {\n    mobile: '+91 9424113605',\n    email: 'chandrasiddharth2511@gmail.com'\n}\n\nexport default contact;","import React from 'react';\nimport { Paper, Grid, Typography } from '@material-ui/core';\nimport Mail from '@material-ui/icons/Mail';\nimport Call from '@material-ui/icons/Call';\n\nimport styles from './styles';\nimport contact from '../../../constants/contact';\n\nconst Contact = () => {\n    const classes = styles();\n    return (\n        <Paper elevation={0} className={classes.paper}>\n            <Grid container direction='column'>\n                <Grid item>\n                    <Typography variant='h4'>\n                        Contact\n                    </Typography>\n                </Grid>\n                <Grid item className={classes.grid}>\n                    <a href={`mailto:${contact.email}`} className={classes.a}>\n                        <Grid container alignItems='center'>\n                            <Mail style={{ marginRight: 20 }}/>\n                            <Typography variant='p'>\n                                {contact.email}\n                            </Typography>\n                        </Grid>\n                    </a>\n                </Grid>\n                <Grid item className={classes.grid}>\n                    <Grid container alignItems='center'>\n                        <Call style={{ marginRight: 20 }}/>\n                        <Typography variant='p'>\n                            {contact.mobile}\n                        </Typography>\n                    </Grid>\n                </Grid>\n            </Grid>\n        </Paper>\n    );\n}\n\nexport default Contact;","import { makeStyles } from '@material-ui/core/styles';\n\nconst styles = makeStyles((theme) => ({\n    paper: {\n        padding: theme.spacing(5),\n        marginTop: theme.spacing(5)\n    },\n    grid: {\n        marginTop: theme.spacing(5),\n        textAlign: 'justify',\n        textJustify: 'inter-word'\n    },\n    degree: {\n        fontWeight: 'bold',\n        color: '#7d7d7d',\n        fontSize: 16\n    },\n    school: {\n        color: '#7d7d7d',\n        fontSize: 16\n    },\n    marks: {\n        color: '#7d7d7d',\n        fontSize: 14\n    }\n}));\n\nexport default styles;","import React from 'react';\nimport { Grid, Typography } from '@material-ui/core';\n\nimport styles from './styles';\n\nconst EducationCard = (props) => {\n    const classes = styles();\n    return (\n        <Grid item className={classes.grid}>\n            <Grid container direction='column'>\n                <Grid item>\n                    <Typography variant='p' className={classes.degree}>\n                        {props.data.degree}\n                    </Typography>\n                </Grid>\n                <Grid item>\n                    <Typography variant='p' className={classes.school}>\n                        {props.data.school}\n                    </Typography>\n                </Grid>\n                <Grid item>\n                    <Typography variant='p' className={classes.marks}>\n                        {`${props.data.score} | ${props.data.time}`}\n                    </Typography>\n                </Grid>\n            </Grid>\n        </Grid>\n    );\n}\n\nexport default EducationCard;","const education = [\n    {\n        degree: 'B.Tech in Computer Science & Engineering',\n        school: 'National Institute of Technology, Raipur',\n        score: 'CPI - 9.69 (On scale of 10)',\n        time: '2016-2020'\n    },\n    {\n        degree: 'Senior Secondary School Certificate',\n        school: 'Delhi Public School, Bhilai',\n        score: '91.2%',\n        time: '2015'\n    },\n    {\n        degree: 'Higher Secondary School Certificate',\n        school: 'Delhi Public School, Bhilai',\n        score: 'CGPA - 10 (On scale of 10)',\n        time: '2013'\n    }\n]\n\nexport default education;","import React from 'react';\nimport { Paper, Grid, Typography } from '@material-ui/core';\n\nimport styles from './styles';\nimport EducationCard from './educationCard';\nimport education from '../../../constants/education';\n\nconst Education = () => {\n    const classes = styles();\n    return (\n        <Paper elevation={0} className={classes.paper}>\n            <Grid container direction='column'>\n                <Grid item>\n                    <Typography variant='h4'>\n                        Education\n                    </Typography>\n                </Grid>\n                <Grid item>\n                    {education.map((item, index) => {\n                        return (\n                            <EducationCard data={item} />\n                        );\n                    })}\n                </Grid>\n            </Grid>\n        </Paper>\n    );\n}\n\nexport default Education;","import { makeStyles } from '@material-ui/core/styles';\n\nconst styles = makeStyles((theme) => ({\n    paper: {\n        padding: theme.spacing(5),\n        marginTop: theme.spacing(5)\n    },\n    grid: {\n        marginTop: theme.spacing(5),\n        textAlign: 'justify',\n        textJustify: 'inter-word'\n    },\n    award: {\n        fontWeight: 'bold',\n        color: '#7d7d7d',\n        fontSize: 16\n    },\n    description: {\n        color: '#7d7d7d',\n        fontSize: 16\n    }\n}));\n\nexport default styles;","import React from 'react';\nimport { Grid, Typography } from '@material-ui/core';\n\nimport styles from './styles';\n\nconst AchievementCard = (props) => {\n    const classes = styles();\n    return (\n        <Grid item className={classes.grid}>\n            <Grid container direction='column'>\n                <Grid item>\n                    <Typography variant='p' className={classes.award}>\n                        {props.data.award}\n                    </Typography>\n                </Grid>\n                <Grid item>\n                    <Typography variant='p' className={classes.description}>\n                        {props.data.description}\n                    </Typography>\n                </Grid>\n            </Grid>\n        </Grid>\n    );\n}\n\nexport default AchievementCard;","const achievements = [\n    {\n        'award': 'Pradhan Mantri Sarvottam Scholarship, SAIL',\n        'description': 'A scholarship given by Bhilai Steel Plant (SAIL) authority to award meritorious students.'\n    },\n    {\n        'award': 'First Prize - Appiness',\n        'description': 'Organized by IIIT, Naya Raipur under the aegis of CGTourism Board. The task was to design cross-platform app for the CG Tourism.'\n    },\n    {\n        'award': 'Second Prize - Vigyaan',\n        'description': 'Secured 2nd position in National Level Science exhibition held at NIT Raipur. Designed NIT Raipur\\'s medical portal.'\n    }\n];\n\nexport default achievements;","import React from 'react';\nimport { Paper, Grid, Typography } from '@material-ui/core';\n\nimport styles from './styles';\nimport AchievementCard from './achievementCard';\nimport achievements from '../../../constants/achievements';\n\nconst Achievements = () => {\n    const classes = styles();\n    return (\n        <Paper elevation={0} className={classes.paper}>\n            <Grid container direction='column'>\n                <Grid item>\n                    <Typography variant='h4'>\n                        Achievements\n                    </Typography>\n                </Grid>\n                <Grid item>\n                    {achievements.map((item, index) => {\n                        return (\n                            <AchievementCard data={item} />\n                        );\n                    })}\n                </Grid>\n            </Grid>\n        </Paper>\n    );\n}\n\nexport default Achievements;","import React from 'react';\nimport Grid from '@material-ui/core/Grid';\n\nimport About from './about';\nimport WorkExperience from './workexp';\nimport styles from './styles';\nimport Projects from './projects';\nimport Skills from './skills';\nimport Contact from './contact';\nimport Education from './education';\nimport Achievements from './achievements';\n\nconst Content = () => {\n    const classes = styles();\n    return (\n        <div className={classes.div}>\n            <Grid container justify='space-around'>\n                <Grid item xs={12} sm={12} md={6}>\n                    <About />\n                    <WorkExperience />\n                    <Projects />\n                </Grid>\n                <Grid item xs={12} sm={12} md={4}>\n                    <Contact />\n                    <Skills />\n                    <Education />\n                    <Achievements />\n                </Grid>\n            </Grid>\n        </div>\n    );\n}\n\nexport default Content;","import React from 'react';\n\nimport Header from './header';\nimport Content from './content';\n\nconst Container = () => {\n    return (\n        <div style={{ flexGrow: 1 }}>\n            <Header />\n            <Content />\n        </div>\n    );\n}\n\nexport default Container;","import React from 'react';\nimport Container from './components';\nimport { Grid } from '@material-ui/core';\n\nconst App = () => {\n    return (\n        <Grid container alignContent='center' justify='space-around' alignItems='center'>\n            <Container />\n        </Grid>\n    )\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'fontsource-roboto';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}